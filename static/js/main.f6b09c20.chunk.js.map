{"version":3,"sources":["assets/images/nav_logoman.svg","components/TopNavBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","this","props","playerId","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","console","log","onChartTypeChange","e","target","onTooltipChange","_","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","fullName","teamAbbreviation","Profile","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","handleSelectPlayer","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6b09c20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav_logoman.63bc98a9.svg\";","import React from  'react';\r\nimport logo from '../assets/images/nav_logoman.svg';\r\n\r\nexport class TopNavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n static propTypes = {\r\n   playerId: PropTypes.number.isRequired,\r\n   minCount: PropTypes.number,\r\n   chartType: PropTypes.string,\r\n   displayTooltip: PropTypes.bool,\r\n }\r\n\r\n componentDidUpdate() {\r\n   nba.stats.shots({\r\n     PlayerID: this.props.playerId\r\n   }).then((response) => {\r\n     const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n       x: (shot.locX + 250) / 10,\r\n       y: (shot.locY + 50) / 10,\r\n       action_type: shot.actionType,\r\n       shot_distance: shot.shotDistance,\r\n       shot_made_flag: shot.shotMadeFlag,\r\n     }));\r\n\r\n     const courtSelection = d3.select(\"#shot-chart\");\r\n     courtSelection.html('');\r\n     const chart_court = court().width(500);\r\n     const chart_shots = shots()\r\n        .shotRenderThreshold(this.props.minCount)\r\n        .displayToolTips(this.props.displayTooltip)\r\n        .displayType(this.props.chartType);\r\n     courtSelection.call(chart_court);\r\n     courtSelection.datum(final_shots).call(chart_shots);\r\n   });\r\n }\r\n render() {\r\n   return (\r\n       <div id=\"shot-chart\"></div>\r\n   );\r\n }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nclass CountSlider extends Component {\r\n  state = {\r\n    inputValue: this.props.value\r\n  };\r\n\r\n  onChange = value => {\r\n    const cleanValue = Number(value) ? value : this.state.inputValue;\r\n    this.setState({\r\n      inputValue: cleanValue\r\n    });\r\n    this.props.onCountSliderChange(cleanValue);\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    return (\r\n      <Row>\r\n        <Col span={12}>\r\n          <Slider\r\n            min={1}\r\n            max={20}\r\n            onChange={this.onChange}\r\n            value={inputValue}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={1}\r\n            max={20}\r\n            style={{ marginLeft: 16 }}\r\n            value={inputValue}\r\n            onChange={this.onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountSlider;\r\n","import React, { Component } from 'react';\r\nimport * as _ from 'lodash';\r\nimport { ShotChart } from './ShotChart';\r\nimport CountSlider from './CountSlider';\r\nimport { Radio, Row, Col, Switch } from 'antd';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass DataViewContainer extends Component {\r\n  state = {\r\n    minCount: 2,\r\n    chartType: 'hexbin',\r\n    displayTooltip: true\r\n  };\r\n\r\n  onCountSliderChange = count => {\r\n    console.log(count);\r\n    this.setState({ minCount: count });\r\n  };\r\n\r\n  onChartTypeChange = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ chartType: e.target.value });\r\n  };\r\n\r\n  onTooltipChange = displayTooltip => {\r\n    console.log(displayTooltip);\r\n    this.setState({ displayTooltip });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"data-view\">\r\n        <ShotChart\r\n          playerId={this.props.playerId}\r\n          minCount={this.state.minCount}\r\n          chartType={this.state.chartType}\r\n          displayTooltip={this.state.displayTooltip}\r\n        />\r\n        <div className=\"filters\">\r\n          {this.state.chartType === 'hexbin' ? (\r\n            <CountSlider\r\n              value={this.state.minCount}\r\n              onCountSliderChange={_.debounce(this.onCountSliderChange, 500)} />\r\n          ) : null}\r\n          <br />\r\n          <Row>\r\n            <Col span={9}>\r\n              <RadioGroup\r\n                onChange={this.onChartTypeChange}\r\n                value={this.state.chartType}\r\n              >\r\n                <Radio value=\"hexbin\">Hexbin</Radio>\r\n                <Radio value=\"scatter\">Scatter</Radio>\r\n              </RadioGroup>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Switch\r\n                checkedChildren=\"On\"\r\n                unCheckedChildren=\"Off\"\r\n                onChange={this.onTooltipChange}\r\n                defaultChecked\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataViewContainer;\r\n","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\n\r\nexport const DEFAULT_PLAYER_INFO = {\r\n  playerId: 201939,\r\n  fullName: 'Stephen Curry',\r\n  teamAbbreviation: 'GSW',\r\n };","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nexport class Profile extends React.Component {\r\n render() {\r\n   const {\r\n     teamAbbreviation,\r\n     teamCity,\r\n     teamName,\r\n     playerName,\r\n     height,\r\n     weight,\r\n     playerId,\r\n     pts, reb, ast, pie,\r\n   } = this.props.playerInfo;\r\n   return (\r\n     <div className=\"profile\">\r\n       <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n       <img\r\n         className=\"profile-pic\"\r\n         src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n         alt=\"Profile\"\r\n       />\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Team</div>\r\n         <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n       </div>\r\n       <img\r\n         className=\"team-logo\"\r\n         src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n         alt=\"Team\"\r\n       />\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Height</div>\r\n         <div className=\"profile-entry-right\">{`${height}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">Weight</div>\r\n         <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">PTS</div>\r\n         <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">REB</div>\r\n         <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">AST</div>\r\n         <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n       </div>\r\n       <div className=\"profile-entry\">\r\n         <div className=\"profile-entry-left\">PIE</div>\r\n         <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n       </div>\r\n     </div>\r\n   );\r\n }\r\n}\r\n","import React, { Component } from 'react';\r\nimport nba from 'nba';\r\nimport { Icon, Input, AutoComplete } from 'antd';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\nimport * as _ from 'lodash';\r\n\r\nconst { Option } = AutoComplete;\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    dataSource: []\r\n  };\r\n\r\n  handleSearch = value => {\r\n    this.setState({\r\n      dataSource: !value\r\n        ? []\r\n        : nba.searchPlayers(value).map(player => ({\r\n          fullName: player.fullName,\r\n          playerId: player.playerId\r\n        }))\r\n    })\r\n    ;\r\n  };\r\n\r\n  onSelect = (playerName) => {\r\n    console.log(playerName);\r\n    this.props.handleSelectPlayer(playerName);\r\n  }\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n\r\n    const options = dataSource.map(player => (\r\n      <Option key={player.fullName} value={player.fullName} className=\"player-option\">\r\n        <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`} alt='' />\r\n        <span className=\"player-option-label\">{player.fullName}</span>\r\n      </Option>\r\n    ));\r\n\r\n    return (\r\n      <AutoComplete\r\n        className=\"search-bar\"\r\n        size=\"large\"\r\n        dataSource={options}\r\n        onSelect={this.onSelect}\r\n        onSearch={_.debounce(this.handleSearch, 500)}\r\n        placeholder=\"Search NBA Player\"\r\n        optionLabelProp=\"value\"\r\n      >\r\n        <Input\r\n          suffix={<Icon type=\"search\" className=\"certain-category-icon\" />}\r\n        />\r\n      </AutoComplete>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport nba from 'nba';\r\nimport DataViewContainer from './DataViewContainer';\r\nimport { Profile } from './Profile';\r\nimport SearchBar from './SearchBar';\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\n// import axios from 'axios';\r\n\r\nexport class Main extends React.Component {\r\n  state = {\r\n    playerInfo: DEFAULT_PLAYER_INFO,\r\n  };\r\n\r\n  loadPlayerInfo = (playerName) => {\r\n    nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\r\n      const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n      this.setState({ playerInfo });\r\n    });\r\n  }\r\n\r\n  handleSelectPlayer = (playerName) => {\r\n      console.log(playerName);\r\n    this.loadPlayerInfo(playerName);\r\n   }\r\n\r\n  componentDidMount() {\r\n    //   axios.get('http://stats.nba.com/stats/commonplayerinfo')\r\n    //     .then((res) => {\r\n    //         debugger;\r\n    //     })\r\n    // const httpInterceptor = axios.interceptors.request.use(function (config) {\r\n    //     return config;\r\n    //   }, function (error) {\r\n    //     console.log(error)\r\n    //     return Promise.reject(error);\r\n    //   });\r\n    this.loadPlayerInfo(this.state.playerInfo.fullName);\r\n    // axios.interceptors.request.eject(httpInterceptor);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <SearchBar handleSelectPlayer={this.handleSelectPlayer}/>\r\n        <div className=\"player\">\r\n          <Profile playerInfo={this.state.playerInfo} />\r\n          <DataViewContainer playerId={this.state.playerInfo.playerId} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport {TopNavBar} from './TopNavBar';\nimport  { Main } from './Main';\nimport HttpsRedirect from 'react-https-redirect';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNavBar/>\n      <HttpsRedirect>\n        <Main/>\n      </HttpsRedirect>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}